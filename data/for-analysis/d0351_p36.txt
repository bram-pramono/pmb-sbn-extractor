% I know Richard drinks a little too much and has a bit of a temper.


[]

% Sequence Box Notation

%SBN% person.n.01  EQU speaker                           % I            [0-1]
%SBN% know.v.01    Proposition &gt;1 Experiencer -1 Time +1 % know         [2-6]
%SBN% time.n.08    EQU now                               %              
%SBN%              CONTINUATION &lt;0                       %              
%SBN% male.n.02    Name "Richard"                        % Richard      [7-14]
%SBN% drink.v.02   Agent -1 Time +1 Patient +3           % drinks       [15-21]
%SBN% time.n.08    EQU now                               %              
%SBN% little.a.02  Quantity +1                           %  --a-- little  --too-- [22-34]
%SBN% measure.n.02 Quantity +                            % much  --and--     [35-43]
%SBN% have.v.02    Pivot -5 Time +1 Theme +2             % has          [44-47]
%SBN% time.n.08    EQU now                               %              
%SBN% entity.n.01  Quantity - QuantityOf +1              %  --a-- bit  --of--     [48-56]
%SBN% temper.n.03                                        %  --a-- temper --.--    [57-66]

% Incremental DRS

tokens:I
sem: λv1.(<b1>['b1←x1']:['b1←person:person.n.01(x1)','b1←Equal(x1,speaker)']</b1>;(v1@x1))
cat: NP
----------
tokens:know
sem: λv1.λv2.λv3.(v2@λv4.(<b1>['b1←e1','b1←p1','b2←t1']:['b1←p1:(v1@λv5.<b3>[]:[]</b3>)','b1←know:know.v.01(e1)','b1←Time(e1,t1)','b1←Stimulus(e1,p1)','b1←Experiencer(e1,v4)','b2←time:time.n.08(t1)','b2←t1=now']</b1>;(v3@e1)))
cat: (S[dcl]\NP)/S[dcl]
----------
tokens:Richard
sem: λv1.(<b1>['b1←x1']:['b1←male:male.n.02(x1)','b1←Name(x1,richard)']</b1>∗(v1@x1))
cat: NP
----------
tokens:drinks
sem: λv1.λv2.λv3.(v2@λv4.(v1@λv5.(<b1>['b1←e1','b2←t1']:['b1←drink:drink.v.02(e1)','b1←Time(e1,t1)','b1←Patient(e1,v5)','b1←Agent(e1,v4)','b2←time:time.n.08(t1)','b2←t1=now']</b1>;(v3@e1))))
cat: (S[dcl]\NP)/NP
----------
tokens:a
sem: λv1.λv2.(<b1>['b1←x1']:[]</b1>;((v1@x1);(v2@x1)))
cat: NP/N
----------
tokens:little
sem: λv1.λv2.(<b1>['b1←s1']:['b1←little:little.a.02(s1)','b1←Quantity(s1,v2)']</b1>;(v1@v2))
cat: N/N
----------
tokens:too
sem: λv1.v1
cat: N/N
----------
tokens:much
sem: λv1.<b1>[]:['b1←measure:measure.n.02(v1)','b1←Quantity(v1,+)']</b1>
cat: N
----------
tokens:and
sem: λv1.λv2.λv3.λv4.(v3@λv5.(((v2@λv6.(v6@v5))@v4);((v1@λv7.(v7@v5))@v4)))
cat: conj
----------
tokens:has
sem: λv1.λv2.λv3.(v2@λv4.(v1@λv5.(<b1>['b1←e1','b2←t1']:['b1←have:have.v.02(e1)','b1←Time(e1,t1)','b1←Theme(e1,v5)','b1←Pivot(e1,v4)','b2←time:time.n.08(t1)','b2←t1=now']</b1>;(v3@e1))))
cat: (S[dcl]\NP)/NP
----------
tokens:a
sem: λv1.λv2.(<b1>['b1←x1']:[]</b1>;((v1@x1);(v2@x1)))
cat: NP/N
----------
tokens:bit
sem: λv1.λv2.(<b1>[]:['b1←entity:entity.n.01(v2)','b1←Quantity(v2,-)']</b1>;(v1@v2))
cat: N/PP
----------
tokens:of
sem: λv1.λv2.(v1@λv3.<b1>[]:['b1←QuantityOf(v2,v3)']</b1>)
cat: PP/NP
----------
tokens:a
sem: λv1.λv2.(<b1>['b1←x1']:[]</b1>;((v1@x1);(v2@x1)))
cat: NP/N
----------
tokens:temper
sem: λv1.<b1>[]:['b1←temper:temper.n.03(v1)']</b1>
cat: N
----------
tokens:.
sem: λv1.v1
cat: S[dcl]\S[dcl]
----------
